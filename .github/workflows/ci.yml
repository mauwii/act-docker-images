name: ci

on:
  push:
    branches: [main, develop]
    paths:
      - '**/Dockerfile'
      - '**/.github/workflows/ci.yml'
  pull_request:
    paths:
      - '**/Dockerfile'
      - '**/.github/workflows/ci.yml'

permissions:
  contents: write
  pull-requests: write
  packages: write

env:
  REGISTRY_IMAGE: ${{ github.actor }}/ubuntu

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        platform: [linux/amd64, linux/arm64]
        from-tag: [act-22.04, act-20.04]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
            ghcr.io/${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./linux/ubuntu/Dockerfile
          platforms: ${{ matrix.platform}}
          # push: ${{ github.event_name != 'pull_request' }}
          # tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            FROM_TAG=${{ matrix.from-tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests/${{ matrix.from-tag }}
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${{ matrix.from-tag }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/${{ matrix.from-tag }}/*
          if-no-files-found: error
          retention-days: 1

  merge-pr:
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.actor == 'mauwii' && github.event_name == 'pull_request' &&  needs.build.result == 'success'
    steps:
      - name: Automerge PR
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  manifests:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      fail-fast: true
      matrix:
        from-tag: [act-22.04, act-20.04]
    if: github.event_name != 'pull_request'
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests/${{ matrix.from-tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.REGISTRY_IMAGE }}
            ghcr.io/${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' && matrix.from-tag == '22.04' }}
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha
          flavor: |
            latest=auto
            prefix=${{ matrix.from-tag }}-,onlatest=true
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests/${{ matrix.from-tag }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
