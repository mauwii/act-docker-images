{
  "ignorePaths": [
    "**/.cspell.json",
    "**/.git/**",
    "**/.jscpd.json",
    "**/.vscode/**",
    "**/tmp/**",
    "**/megalinter-reports/**"
  ],
  "language": "en,en-GB",
  "words": [
    "actrc",
    "aliyun",
    "aquasecurity",
    "ASPNET",
    "automake",
    "azcliextensions",
    "BASEPATH",
    "binutils",
    "brotli",
    "buildkit",
    "buildpack",
    "buildx",
    "catthehacker",
    "cmdline",
    "CODEOWNERS",
    "commandlinetools",
    "containerd",
    "coreutils",
    "dbus",
    "dckr",
    "dearmor",
    "didnt",
    "dnsutils",
    "dockerhub",
    "dpkg",
    "elif",
    "ensurepath",
    "fakeroot",
    "getversion",
    "gfortran",
    "githubcli",
    "globbing",
    "hadolint",
    "haveged",
    "hostedtoolcache",
    "imagegeneration",
    "imagename",
    "imagetools",
    "iputils",
    "keyscan",
    "kics",
    "libc",
    "libcurl",
    "libgbm",
    "libgcc",
    "libgconf",
    "libgsl",
    "libgssapi",
    "libgtk",
    "libicu",
    "libmagic",
    "libmagickcore",
    "libmagickwand",
    "libsecret",
    "libsqlite",
    "libstdc",
    "libunwind",
    "libxkbfile",
    "libxss",
    "libyaml",
    "localedef",
    "MARKDOWNLINT",
    "mauwii",
    "mediainfo",
    "mediatypes",
    "mergify",
    "multiarch",
    "myrepo",
    "nbgv",
    "nektos",
    "nerdbank",
    "netcat",
    "nofile",
    "NOLOGO",
    "noninteractive",
    "noto",
    "nugetpackages",
    "nupkg",
    "oldci",
    "ONBUILD",
    "opencontainers",
    "OPTOUT",
    "patchelf",
    "pigz",
    "pipefail",
    "pipx",
    "pkrvars",
    "pwsh",
    "quickview",
    "rubygems",
    "Sfrg",
    "shellcheck",
    "singlearch",
    "sphinxsearch",
    "sshpass",
    "stefanzweifel",
    "targetproc",
    "texinfo",
    "toolcache",
    "TOOLSDIRECTORY",
    "toolsets",
    "trivy",
    "trivyignore",
    "tzdata",
    "venv",
    "vercel",
    "vuln",
    "WORKDIR",
    "XMLDOC",
    "xorriso",
    "xvfb",
    "Zrmnxj",
    "zstd",
    "zsync"
  ],
  "enableFiletypes": ["github-actions-workflow"]
}
